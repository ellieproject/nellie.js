{"stats":{"asserts":52,"passes":25,"failures":27},"asserts":[{"number":1,"comment":"absolute › beforeEach hook for afterExecute() should prime register.b","name":"absolute › beforeExecute() should return true","ok":true,"extra":{}},{"number":2,"comment":"absolute › beforeEach hook for afterExecute() should prime register.b","name":"absolute › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute.test.js:16:5"]}},{"number":3,"comment":"absolute › beforeEach hook for afterExecute() should prime register.b","name":"absolute › afterExecute() should return true","ok":true,"extra":{}},{"number":4,"comment":"absolute › beforeEach hook for afterExecute() should prime register.b","name":"absolute › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute.test.js:24:5"]}},{"number":5,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect_x › beforeExecute() should return true","ok":true,"extra":{}},{"number":6,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect_x › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:16:5"]}},{"number":7,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect_x › afterExecute() should return true","ok":true,"extra":{}},{"number":8,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect_x › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:24:5"]}},{"number":9,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect › beforeExecute() should return true","ok":true,"extra":{}},{"number":10,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect.test.js:16:5"]}},{"number":11,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect › afterExecute() should return true","ok":true,"extra":{}},{"number":12,"comment":"indirect › beforeEach hook for afterExecute() should prime register.b","name":"indirect › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect.test.js:24:5"]}},{"number":13,"comment":"immediate › beforeEach hook for afterExecute() should prime register.b","name":"immediate › beforeExecute() should return true","ok":true,"extra":{}},{"number":14,"comment":"immediate › beforeEach hook for afterExecute() should prime register.b","name":"immediate › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/immediate.test.js:16:5"]}},{"number":15,"comment":"immediate › beforeEach hook for afterExecute() should prime register.b","name":"immediate › afterExecute() should return true","ok":true,"extra":{}},{"number":16,"comment":"immediate › beforeEach hook for afterExecute() should prime register.b","name":"immediate › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/immediate.test.js:24:5"]}},{"number":17,"comment":"implied › beforeEach hook for afterExecute() should prime register.b","name":"implied › beforeExecute() should return true","ok":true,"extra":{}},{"number":18,"comment":"implied › beforeEach hook for afterExecute() should prime register.b","name":"implied › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/implied.test.js:16:5"]}},{"number":19,"comment":"implied › beforeEach hook for afterExecute() should prime register.b","name":"implied › afterExecute() should return true","ok":true,"extra":{}},{"number":20,"comment":"implied › beforeEach hook for afterExecute() should prime register.b","name":"implied › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/implied.test.js:24:5"]}},{"number":21,"comment":"absolute_y › beforeEach hook for afterExecute() should prime register.b","name":"absolute_y › beforeExecute() should return true","ok":true,"extra":{}},{"number":22,"comment":"absolute_y › beforeEach hook for afterExecute() should prime register.b","name":"absolute_y › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:16:5"]}},{"number":23,"comment":"absolute_y › beforeEach hook for afterExecute() should prime register.b","name":"absolute_y › afterExecute() should return true","ok":true,"extra":{}},{"number":24,"comment":"absolute_y › beforeEach hook for afterExecute() should prime register.b","name":"absolute_y › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:24:5"]}},{"number":25,"comment":"absolute_x › beforeEach hook for afterExecute() should prime register.b","name":"absolute_x › beforeExecute() should return true","ok":true,"extra":{}},{"number":26,"comment":"absolute_x › beforeEach hook for afterExecute() should prime register.b","name":"absolute_x › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:16:5"]}},{"number":27,"comment":"absolute_x › beforeEach hook for afterExecute() should prime register.b","name":"absolute_x › afterExecute() should return true","ok":true,"extra":{}},{"number":28,"comment":"absolute_x › beforeEach hook for afterExecute() should prime register.b","name":"absolute_x › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:24:5"]}},{"number":29,"comment":"accumulator › beforeEach hook for afterExecute() should prime register.b","name":"accumulator › beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError"],"message":["runner.next is not a function,","}"],"at":["Mode.beforeExecute","(node_modules/@ellieproject/ellie/src/ellie/processor/mode.js:39:23)","test/nellie/mos6502/modes/accumulator.test.js:13:23"]}},{"number":30,"comment":"accumulator › beforeEach hook for afterExecute() should prime register.b","name":"accumulator › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/accumulator.test.js:17:5"]}},{"number":31,"comment":"accumulator › beforeEach hook for afterExecute() should prime register.b","name":"accumulator › afterExecute() should return true","ok":true,"extra":{}},{"number":32,"comment":"accumulator › beforeEach hook for afterExecute() should prime register.b","name":"accumulator › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/accumulator.test.js:25:5"]}},{"number":33,"comment":"indirect_y › beforeEach hook for afterExecute() should prime register.b","name":"indirect_y › beforeExecute() should return true","ok":true,"extra":{}},{"number":34,"comment":"indirect_y › beforeEach hook for afterExecute() should prime register.b","name":"indirect_y › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:16:5"]}},{"number":35,"comment":"indirect_y › beforeEach hook for afterExecute() should prime register.b","name":"indirect_y › afterExecute() should return true","ok":true,"extra":{}},{"number":36,"comment":"indirect_y › beforeEach hook for afterExecute() should prime register.b","name":"indirect_y › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:24:5"]}},{"number":37,"comment":"zero_page › beforeEach hook for afterExecute() should prime register.b","name":"zero_page › beforeExecute() should return true","ok":true,"extra":{}},{"number":38,"comment":"zero_page › beforeEach hook for afterExecute() should prime register.b","name":"zero_page › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page.test.js:16:5"]}},{"number":39,"comment":"zero_page › beforeEach hook for afterExecute() should prime register.b","name":"zero_page › afterExecute() should return true","ok":true,"extra":{}},{"number":40,"comment":"zero_page › beforeEach hook for afterExecute() should prime register.b","name":"zero_page › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page.test.js:24:5"]}},{"number":41,"comment":"zero_page_y › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y › beforeExecute() should return true","ok":true,"extra":{}},{"number":42,"comment":"zero_page_y › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:16:5"]}},{"number":43,"comment":"zero_page_y › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y › afterExecute() should return true","ok":true,"extra":{}},{"number":44,"comment":"zero_page_y › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:24:5"]}},{"number":45,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"relative › beforeExecute() should return true","ok":true,"extra":{}},{"number":46,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"relative › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/relative.test.js:16:5"]}},{"number":47,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"relative › afterExecute() should return true","ok":true,"extra":{}},{"number":48,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"relative › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/relative.test.js:24:5"]}},{"number":49,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x › beforeExecute() should return true","ok":true,"extra":{}},{"number":50,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x › beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:16:5"]}},{"number":51,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x › afterExecute() should return true","ok":true,"extra":{}},{"number":52,"comment":"zero_page_x › beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x › afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:24:5",""]}}]}
