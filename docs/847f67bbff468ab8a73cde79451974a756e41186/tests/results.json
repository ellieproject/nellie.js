{"stats":{"asserts":50,"passes":17,"failures":33},"asserts":[{"number":1,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"absolute_x » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:12:5"]}},{"number":2,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"absolute_x » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:16:5"]}},{"number":3,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"absolute_x » afterExecute() should return true","ok":true,"extra":{}},{"number":4,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"absolute_x » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:24:5"]}},{"number":5,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"immediate » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/immediate.test.js:12:5"]}},{"number":6,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"immediate » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/immediate.test.js:16:5"]}},{"number":7,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"immediate » afterExecute() should return true","ok":true,"extra":{}},{"number":8,"comment":"immediate » beforeEach hook for afterExecute() should prime register.b","name":"immediate » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/immediate.test.js:24:5"]}},{"number":9,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"absolute » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/absolute.test.js:12:5"]}},{"number":10,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"absolute » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute.test.js:16:5"]}},{"number":11,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"absolute » afterExecute() should return true","ok":true,"extra":{}},{"number":12,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"absolute » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute.test.js:24:5"]}},{"number":13,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"indirect » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/indirect.test.js:12:5"]}},{"number":14,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"indirect » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect.test.js:16:5"]}},{"number":15,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"indirect » afterExecute() should return true","ok":true,"extra":{}},{"number":16,"comment":"indirect » beforeEach hook for afterExecute() should prime register.b","name":"indirect » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect.test.js:24:5"]}},{"number":17,"comment":"accumulator » beforeEach hook for afterExecute() should load the ALU into the accumulator","name":"accumulator » beforeExecute() should return true","ok":true,"extra":{}},{"number":18,"comment":"accumulator » beforeEach hook for afterExecute() should load the ALU into the accumulator","name":"accumulator » beforeExecute() should load the accumulator into the ALU","ok":true,"extra":{}},{"number":19,"comment":"accumulator » beforeEach hook for afterExecute() should load the ALU into the accumulator","name":"accumulator » afterExecute() should return true","ok":true,"extra":{}},{"number":20,"comment":"accumulator » beforeEach hook for afterExecute() should load the ALU into the accumulator","name":"accumulator » afterExecute() should load the ALU into the accumulator","ok":true,"extra":{}},{"number":21,"comment":"absolute_y » beforeEach hook for beforeExecute() should return true","name":"indirect_x » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:12:5"]}},{"number":22,"comment":"absolute_y » beforeEach hook for beforeExecute() should return true","name":"indirect_x » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:16:5"]}},{"number":23,"comment":"absolute_y » beforeEach hook for beforeExecute() should return true","name":"indirect_x » afterExecute() should return true","ok":true,"extra":{}},{"number":24,"comment":"absolute_y » beforeEach hook for beforeExecute() should return true","name":"indirect_x » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:24:5"]}},{"number":25,"comment":"absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"absolute_y » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:12:5"]}},{"number":26,"comment":"absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"absolute_y » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:16:5"]}},{"number":27,"comment":"absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"absolute_y » afterExecute() should return true","ok":true,"extra":{}},{"number":28,"comment":"absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"absolute_y » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:24:5"]}},{"number":29,"comment":"implied » beforeEach hook for afterExecute() should return true","name":"implied » beforeExecute() should return true","ok":true,"extra":{}},{"number":30,"comment":"implied » beforeEach hook for afterExecute() should return true","name":"implied » afterExecute() should return true","ok":true,"extra":{}},{"number":31,"comment":"indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"indirect_y » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:12:5"]}},{"number":32,"comment":"indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"indirect_y » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:16:5"]}},{"number":33,"comment":"indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"indirect_y » afterExecute() should return true","ok":true,"extra":{}},{"number":34,"comment":"indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"indirect_y » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:24:5"]}},{"number":35,"comment":"relative » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:12:5"]}},{"number":36,"comment":"relative » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:16:5"]}},{"number":37,"comment":"relative » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y » afterExecute() should return true","ok":true,"extra":{}},{"number":38,"comment":"relative » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_y » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:24:5"]}},{"number":39,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:12:5"]}},{"number":40,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:16:5"]}},{"number":41,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x » afterExecute() should return true","ok":true,"extra":{}},{"number":42,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page_x » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:24:5"]}},{"number":43,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"relative » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/relative.test.js:12:5"]}},{"number":44,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"relative » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/relative.test.js:16:5"]}},{"number":45,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"relative » afterExecute() should return true","ok":true,"extra":{}},{"number":46,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"relative » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/relative.test.js:24:5"]}},{"number":47,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/zero_page.test.js:12:5"]}},{"number":48,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page.test.js:16:5"]}},{"number":49,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page » afterExecute() should return true","ok":true,"extra":{}},{"number":50,"comment":"zero_page » beforeEach hook for afterExecute() should prime register.b","name":"zero_page » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page.test.js:24:5",""]}}]}
