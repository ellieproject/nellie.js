{"stats":{"asserts":200,"passes":105,"failures":95},"asserts":[{"number":1,"comment":null,"name":"No tests found in test\\nellie.test.js, make sure to import \"ava\" at the top of your test file","ok":false,"extra":{}},{"number":2,"comment":null,"name":"No tests found in test\\nellie\\mos6502.test.js, make sure to import \"ava\" at the top of your test file","ok":false,"extra":{}},{"number":3,"comment":"nellie » mos6502 » modes » implied » beforeEach hook for afterExecute() should return true","name":"nellie » mos6502 » modes » implied » beforeExecute() should return true","ok":true,"extra":{}},{"number":4,"comment":"nellie » mos6502 » modes » implied » beforeEach hook for afterExecute() should return true","name":"nellie » mos6502 » modes » implied » afterExecute() should return true","ok":true,"extra":{}},{"number":5,"comment":"nellie » mos6502 » modes » absolute_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute_x » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:12:5"]}},{"number":6,"comment":"nellie » mos6502 » modes » absolute_y » beforeEach hook for beforeExecute() should return true","name":"nellie » mos6502 » modes » absolute_x » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:16:5"]}},{"number":7,"comment":"nellie » mos6502 » modes » absolute_y » beforeEach hook for beforeExecute() should return true","name":"nellie » mos6502 » modes » absolute_x » afterExecute() should return true","ok":true,"extra":{}},{"number":8,"comment":"nellie » mos6502 » modes » absolute_y » beforeEach hook for beforeExecute() should return true","name":"nellie » mos6502 » modes » absolute_x » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_x.test.js:24:5"]}},{"number":9,"comment":"nellie » mos6502 » modes » absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute_y » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:12:5"]}},{"number":10,"comment":"nellie » mos6502 » modes » absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute_y » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:16:5"]}},{"number":11,"comment":"nellie » mos6502 » modes » absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute_y » afterExecute() should return true","ok":true,"extra":{}},{"number":12,"comment":"nellie » mos6502 » modes » absolute_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute_y » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute_y.test.js:24:5"]}},{"number":13,"comment":"nellie » mos6502 » modes » absolute » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/absolute.test.js:12:5"]}},{"number":14,"comment":"nellie » mos6502 » modes » absolute » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute.test.js:16:5"]}},{"number":15,"comment":"nellie » mos6502 » modes » absolute » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute » afterExecute() should return true","ok":true,"extra":{}},{"number":16,"comment":"nellie » mos6502 » modes » absolute » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » absolute » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/absolute.test.js:24:5"]}},{"number":17,"comment":"nellie » mos6502 » modes » indirect_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_x » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:12:5"]}},{"number":18,"comment":"nellie » mos6502 » modes » indirect_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_x » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:16:5"]}},{"number":19,"comment":"nellie » mos6502 » modes » indirect_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_x » afterExecute() should return true","ok":true,"extra":{}},{"number":20,"comment":"nellie » mos6502 » modes » indirect_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_x » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_x.test.js:24:5"]}},{"number":21,"comment":"nellie » mos6502 » modes » indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_y » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:12:5"]}},{"number":22,"comment":"nellie » mos6502 » modes » indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_y » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:16:5"]}},{"number":23,"comment":"nellie » mos6502 » modes » indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_y » afterExecute() should return true","ok":true,"extra":{}},{"number":24,"comment":"nellie » mos6502 » modes » indirect_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect_y » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect_y.test.js:24:5"]}},{"number":25,"comment":"nellie » mos6502 » modes » indirect » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/indirect.test.js:12:5"]}},{"number":26,"comment":"nellie » mos6502 » modes » indirect » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect.test.js:16:5"]}},{"number":27,"comment":"nellie » mos6502 » modes » indirect » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect » afterExecute() should return true","ok":true,"extra":{}},{"number":28,"comment":"nellie » mos6502 » modes » indirect » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » indirect » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/indirect.test.js:24:5"]}},{"number":29,"comment":"nellie » mos6502 » modes » relative » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » relative » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/relative.test.js:12:5"]}},{"number":30,"comment":"nellie » mos6502 » modes » relative » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » relative » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/relative.test.js:16:5"]}},{"number":31,"comment":"nellie » mos6502 » modes » relative » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » relative » afterExecute() should return true","ok":true,"extra":{}},{"number":32,"comment":"nellie » mos6502 » modes » relative » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » relative » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/relative.test.js:24:5"]}},{"number":33,"comment":"nellie » mos6502 » modes » zero_page » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/zero_page.test.js:12:5"]}},{"number":34,"comment":"nellie » mos6502 » modes » zero_page » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page.test.js:16:5"]}},{"number":35,"comment":"nellie » mos6502 » modes » zero_page » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page » afterExecute() should return true","ok":true,"extra":{}},{"number":36,"comment":"nellie » mos6502 » modes » zero_page » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page.test.js:24:5"]}},{"number":37,"comment":"nellie » mos6502 » modes » zero_page_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_x » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:12:5"]}},{"number":38,"comment":"nellie » mos6502 » modes » zero_page_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_x » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:16:5"]}},{"number":39,"comment":"nellie » mos6502 » modes » zero_page_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_x » afterExecute() should return true","ok":true,"extra":{}},{"number":40,"comment":"nellie » mos6502 » modes » zero_page_x » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_x » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_x.test.js:24:5"]}},{"number":41,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_y » beforeExecute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- undefined","+ true"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:12:5"]}},{"number":42,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_y » beforeExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:16:5"]}},{"number":43,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_y » afterExecute() should return true","ok":true,"extra":{}},{"number":44,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » zero_page_y » afterExecute() should prime register.b","ok":false,"extra":{"name":["AssertionError"],"message":["Test failed via `t.fail()`","assertion: fail"],"at":["test/nellie/mos6502/modes/zero_page_y.test.js:24:5"]}},{"number":45,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » accumulator » beforeExecute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":46,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » accumulator » beforeExecute() should load the accumulator into the ALU","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":47,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » accumulator » afterExecute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":48,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » accumulator » afterExecute() should load the ALU into the accumulator","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":49,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » immediate » beforeExecute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":50,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » immediate » beforeExecute() should load next byte of program counter into ALU","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":51,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » immediate » beforeExecute() should increment the PC","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":52,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » modes » immediate » afterExecute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":53,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » operations » ADC » execute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":54,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » operations » AND » execute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":55,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » operations » ASL » execute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":56,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » operations » BCC » execute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":57,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » operations » BCS » execute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":58,"comment":"nellie » mos6502 » modes » zero_page_y » beforeEach hook for afterExecute() should prime register.b","name":"nellie » mos6502 » operations » BEQ » execute() should return true","ok":false,"extra":{"name":["Error"],"message":["Exited because no new tests completed within the last 10000ms of inactivity"],"at":["Error: Exited because no new tests completed within the last 10000ms of","inactivity","at TapReporter.writeTimeout (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:135:15)","at TapReporter.consumeStateChange (P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:185:10)","at P:\\ellie\\js\\nellie.js\\node_modules\\ava\\lib\\reporters\\tap.js:71:45","at P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:260:13","at Array.map (<anonymous>)","at RunStatus.emit (P:\\ellie\\js\\nellie.js\\node_modules\\emittery\\index.js:258:23)"]}},{"number":59,"comment":"nellie » mos6502 » operations » BNE » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » BNE » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/BNE.test.js:13:5"]}},{"number":60,"comment":"nellie » mos6502 » operations » CLC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » CLC » execute() should return true","ok":true,"extra":{}},{"number":61,"comment":"nellie » mos6502 » operations » BVC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » BPL » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/BPL.test.js:13:5"]}},{"number":62,"comment":"nellie » mos6502 » operations » BVC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » BRK » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/BRK.test.js:13:5"]}},{"number":63,"comment":"nellie » mos6502 » operations » BVC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » BMI » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/BMI.test.js:13:5"]}},{"number":64,"comment":"nellie » mos6502 » operations » BVC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » BVS » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/BVS.test.js:13:5"]}},{"number":65,"comment":"nellie » mos6502 » operations » BVC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » BIT » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/BIT.test.js:13:5"]}},{"number":66,"comment":"nellie » mos6502 » operations » BVC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » BVC » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/BVC.test.js:13:5"]}},{"number":67,"comment":"nellie » mos6502 » operations » CLD » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » CLD » execute() should return true","ok":true,"extra":{}},{"number":68,"comment":"nellie » mos6502 » operations » CLI » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » CLI » execute() should return true","ok":true,"extra":{}},{"number":69,"comment":"nellie » mos6502 » operations » CLV » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » CLV » execute() should return true","ok":true,"extra":{}},{"number":70,"comment":"nellie » mos6502 » operations » CMP » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » CPY » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/CPY.test.js:13:5"]}},{"number":71,"comment":"nellie » mos6502 » operations » CMP » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » CPX » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/CPX.test.js:13:5"]}},{"number":72,"comment":"nellie » mos6502 » operations » DEC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » CMP » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/CMP.test.js:13:5"]}},{"number":73,"comment":"nellie » mos6502 » operations » DEC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » DEC » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/DEC.test.js:13:5"]}},{"number":74,"comment":"nellie » mos6502 » operations » DEX » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » DEX » execute() should return true","ok":true,"extra":{}},{"number":75,"comment":"nellie » mos6502 » operations » DEY » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » DEY » execute() should return true","ok":true,"extra":{}},{"number":76,"comment":"nellie » mos6502 » operations » EOR » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » INC » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/INC.test.js:13:5"]}},{"number":77,"comment":"nellie » mos6502 » operations » INY » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » INY » execute() should return true","ok":true,"extra":{}},{"number":78,"comment":"nellie » mos6502 » operations » INY » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » EOR » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/EOR.test.js:13:5"]}},{"number":79,"comment":"nellie » mos6502 » operations » INX » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » INX » execute() should return true","ok":true,"extra":{}},{"number":80,"comment":"nellie » mos6502 » operations » LDA » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » JMP » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/JMP.test.js:13:5"]}},{"number":81,"comment":"nellie » mos6502 » operations » LDA » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » JSR » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/JSR.test.js:13:5"]}},{"number":82,"comment":"nellie » mos6502 » operations » LDA » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » LDA » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/LDA.test.js:13:5"]}},{"number":83,"comment":"nellie » mos6502 » operations » ORA » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » ORA » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/ORA.test.js:13:5"]}},{"number":84,"comment":"nellie » mos6502 » operations » PHP » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » PHP » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/PHP.test.js:13:5"]}},{"number":85,"comment":"nellie » mos6502 » operations » PHA » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » PHA » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/PHA.test.js:13:5"]}},{"number":86,"comment":"nellie » mos6502 » operations » PLP » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » PLA » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/PLA.test.js:13:5"]}},{"number":87,"comment":"nellie » mos6502 » operations » PLP » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » PLP » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/PLP.test.js:13:5"]}},{"number":88,"comment":"nellie » mos6502 » operations » SBC » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » RTI » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/RTI.test.js:13:5"]}},{"number":89,"comment":"nellie » mos6502 » operations » RTS » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » SBC » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/SBC.test.js:13:5"]}},{"number":90,"comment":"nellie » mos6502 » operations » RTS » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » RTS » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/RTS.test.js:13:5"]}},{"number":91,"comment":"nellie » mos6502 » operations » STA » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » STA » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/STA.test.js:13:5"]}},{"number":92,"comment":"nellie » mos6502 » operations » STX » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » STX » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/STX.test.js:13:5"]}},{"number":93,"comment":"nellie » mos6502 » operations » TSX » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » STY » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/STY.test.js:13:5"]}},{"number":94,"comment":"nellie » mos6502 » operations » TSX » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » TSX » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/TSX.test.js:13:5"]}},{"number":95,"comment":"nellie » mos6502 » operations » TXS » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » TXS » execute() should return true","ok":false,"extra":{"name":["AssertionError","assertion: is","values:","Difference:: |-","- false","+ true"],"at":["test/nellie/mos6502/operations/TXS.test.js:13:5"]}},{"number":96,"comment":"nellie » mos6502 » operations » TAY » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAY » execute() should return true","ok":true,"extra":{}},{"number":97,"comment":"nellie » mos6502 » operations » TAY » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAY » execute() should set Y from A","ok":true,"extra":{}},{"number":98,"comment":"nellie » mos6502 » operations » TAY » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAY » execute() should set N flag to 0","ok":true,"extra":{}},{"number":99,"comment":"nellie » mos6502 » operations » TAY » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAY » execute() should set N flag to 1","ok":true,"extra":{}},{"number":100,"comment":"nellie » mos6502 » operations » TAY » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAY » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":101,"comment":"nellie » mos6502 » operations » TAY » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAY » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":102,"comment":"nellie » mos6502 » operations » TAY » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAY » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":103,"comment":"nellie » mos6502 » operations » TXA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TXA » execute() should return true","ok":true,"extra":{}},{"number":104,"comment":"nellie » mos6502 » operations » TXA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TXA » execute() should set A from X","ok":true,"extra":{}},{"number":105,"comment":"nellie » mos6502 » operations » TXA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TXA » execute() should set N flag to 0","ok":true,"extra":{}},{"number":106,"comment":"nellie » mos6502 » operations » TXA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TXA » execute() should set N flag to 1","ok":true,"extra":{}},{"number":107,"comment":"nellie » mos6502 » operations » TXA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TXA » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":108,"comment":"nellie » mos6502 » operations » TXA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TXA » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":109,"comment":"nellie » mos6502 » operations » TXA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TXA » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":110,"comment":"nellie » mos6502 » operations » TAX » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAX » execute() should return true","ok":true,"extra":{}},{"number":111,"comment":"nellie » mos6502 » operations » TAX » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAX » execute() should set X from A","ok":true,"extra":{}},{"number":112,"comment":"nellie » mos6502 » operations » TAX » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAX » execute() should set N flag to 0","ok":true,"extra":{}},{"number":113,"comment":"nellie » mos6502 » operations » TAX » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAX » execute() should set N flag to 1","ok":true,"extra":{}},{"number":114,"comment":"nellie » mos6502 » operations » TAX » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAX » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":115,"comment":"nellie » mos6502 » operations » TAX » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAX » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":116,"comment":"nellie » mos6502 » operations » TAX » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TAX » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":117,"comment":"nellie » mos6502 » operations » SEI » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SEI » execute() should return true","ok":true,"extra":{}},{"number":118,"comment":"nellie » mos6502 » operations » SEI » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SEI » execute() should set I flag to 1","ok":true,"extra":{}},{"number":119,"comment":"nellie » mos6502 » operations » SEI » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SEI » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":120,"comment":"nellie » mos6502 » operations » SED » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SED » execute() should return true","ok":true,"extra":{}},{"number":121,"comment":"nellie » mos6502 » operations » SED » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SED » execute() should set D flag to 1","ok":true,"extra":{}},{"number":122,"comment":"nellie » mos6502 » operations » SED » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SED » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":123,"comment":"nellie » mos6502 » operations » SEC » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SEC » execute() should return true","ok":true,"extra":{}},{"number":124,"comment":"nellie » mos6502 » operations » SEC » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SEC » execute() should set C flag to 1","ok":true,"extra":{}},{"number":125,"comment":"nellie » mos6502 » operations » SEC » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » SEC » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":126,"comment":"nellie » mos6502 » operations » TYA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TYA » execute() should return true","ok":true,"extra":{}},{"number":127,"comment":"nellie » mos6502 » operations » TYA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TYA » execute() should set A from Y","ok":true,"extra":{}},{"number":128,"comment":"nellie » mos6502 » operations » TYA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TYA » execute() should set N flag to 0","ok":true,"extra":{}},{"number":129,"comment":"nellie » mos6502 » operations » TYA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TYA » execute() should set N flag to 1","ok":true,"extra":{}},{"number":130,"comment":"nellie » mos6502 » operations » TYA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TYA » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":131,"comment":"nellie » mos6502 » operations » TYA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TYA » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":132,"comment":"nellie » mos6502 » operations » TYA » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » TYA » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":133,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should return true","name":"nellie » mos6502 » operations » ROR » execute() should return true","ok":true,"extra":{}},{"number":134,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should rotate B right (no carry)","ok":true,"extra":{}},{"number":135,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should rotate B right (carry)","ok":true,"extra":{}},{"number":136,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should set C flag to 0","ok":true,"extra":{}},{"number":137,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should set C flag to 1","ok":true,"extra":{}},{"number":138,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should set N flag to 0","ok":true,"extra":{}},{"number":139,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should set N flag to 1","ok":true,"extra":{}},{"number":140,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":141,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":142,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » run() ABSOLUTE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROR 0x7e. beforeExecute() returned undefined,","}"]}},{"number":143,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » run() ABSOLUTE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROR 0x6e. beforeExecute() returned undefined,","}"]}},{"number":144,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » run() ACCUMULATOR mode should return this","ok":true,"extra":{}},{"number":145,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » run() ZERO_PAGE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROR 0x76. beforeExecute() returned undefined,","}"]}},{"number":146,"comment":"nellie » mos6502 » operations » ROL » beforeEach hook for execute() should set C flag to 1","name":"nellie » mos6502 » operations » ROR » run() ZERO_PAGE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROR 0x66. beforeExecute() returned undefined,","}"]}},{"number":147,"comment":"nellie » mos6502 » operations » NOP » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » NOP » execute() should return true","ok":true,"extra":{}},{"number":148,"comment":"nellie » mos6502 » operations » NOP » beforeEach hook for run() IMPLIED mode should return this","name":"nellie » mos6502 » operations » NOP » run() IMPLIED mode should return this","ok":true,"extra":{}},{"number":149,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should return true","ok":true,"extra":{}},{"number":150,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should rotate B left (no carry)","ok":true,"extra":{}},{"number":151,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should rotate B left (carry)","ok":true,"extra":{}},{"number":152,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should set C flag to 0","ok":true,"extra":{}},{"number":153,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should set C flag to 1","ok":true,"extra":{}},{"number":154,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should set N flag to 0","ok":true,"extra":{}},{"number":155,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should set N flag to 1","ok":true,"extra":{}},{"number":156,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":157,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":158,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » run() ABSOLUTE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROL 0x3e. beforeExecute() returned undefined,","}"]}},{"number":159,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » run() ABSOLUTE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROL 0x2e. beforeExecute() returned undefined,","}"]}},{"number":160,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » run() ACCUMULATOR mode should return this","ok":true,"extra":{}},{"number":161,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » run() ZERO_PAGE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROL 0x36. beforeExecute() returned undefined,","}"]}},{"number":162,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ABSOLUTE_X mode should return this","name":"nellie » mos6502 » operations » ROL » run() ZERO_PAGE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting ROL 0x26. beforeExecute() returned undefined,","}"]}},{"number":163,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should return true","ok":true,"extra":{}},{"number":164,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should shift B right (no carry)","ok":true,"extra":{}},{"number":165,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should shift B right (carry)","ok":true,"extra":{}},{"number":166,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should set C flag to 0","ok":true,"extra":{}},{"number":167,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should set C flag to 1","ok":true,"extra":{}},{"number":168,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should set N flag to 0","ok":true,"extra":{}},{"number":169,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should never set N flag to 1","ok":true,"extra":{}},{"number":170,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":171,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":172,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » run() ABSOLUTE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LSR 0x5e. beforeExecute() returned undefined,","}"]}},{"number":173,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » run() ABSOLUTE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LSR 0x4e. beforeExecute() returned undefined,","}"]}},{"number":174,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » run() ACCUMULATOR mode should return this","ok":true,"extra":{}},{"number":175,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » run() ZERO_PAGE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LSR 0x56. beforeExecute() returned undefined,","}"]}},{"number":176,"comment":"nellie » mos6502 » operations » LSR » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LSR » run() ZERO_PAGE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LSR 0x46. beforeExecute() returned undefined,","}"]}},{"number":177,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » execute() should return true","ok":true,"extra":{}},{"number":178,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » execute() should load Y","ok":true,"extra":{}},{"number":179,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » execute() should set N flag to 0","ok":true,"extra":{}},{"number":180,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » execute() should set N flag to 1","ok":true,"extra":{}},{"number":181,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":182,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":183,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » run() ABSOLUTE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Cannot read properties of undefined (reading \\toString\\),","}"],"at":["Operation.run","(node_modules/@ellieproject/ellie/src/ellie/processor/operation.js:83:84)","test/nellie/mos6502/operations/LDY.test.js:58:11"]}},{"number":184,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » run() ABSOLUTE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LDY 0xac. beforeExecute() returned undefined,","}"]}},{"number":185,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » run() IMMEDIATE mode should return this","ok":true,"extra":{}},{"number":186,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » run() IMMEDIATE mode should load Y from PC","ok":true,"extra":{}},{"number":187,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » run() ZERO_PAGE_X mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Cannot read properties of undefined (reading \\toString\\),","}"],"at":["Operation.run","(node_modules/@ellieproject/ellie/src/ellie/processor/operation.js:83:84)","test/nellie/mos6502/operations/LDY.test.js:85:11"]}},{"number":188,"comment":"nellie » mos6502 » operations » LDY » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDY » run() ZERO_PAGE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LDY 0xa4. beforeExecute() returned undefined,","}"]}},{"number":189,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » execute() should return true","ok":true,"extra":{}},{"number":190,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » execute() should load Y","ok":true,"extra":{}},{"number":191,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » execute() should set N flag to 0","ok":true,"extra":{}},{"number":192,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » execute() should set N flag to 1","ok":true,"extra":{}},{"number":193,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » execute() should set Z flag to 0","ok":true,"extra":{}},{"number":194,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » execute() should set Z flag to 1","ok":true,"extra":{}},{"number":195,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » run() ABSOLUTE_Y mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LDX 0xbe. beforeExecute() returned undefined,","}"]}},{"number":196,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » run() ABSOLUTE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LDX 0xae. beforeExecute() returned undefined,","}"]}},{"number":197,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » run() IMMEDIATE mode should return this","ok":true,"extra":{}},{"number":198,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » run() IMMEDIATE mode should load Y from PC","ok":true,"extra":{}},{"number":199,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » run() ZERO_PAGE_Y mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LDX 0xb6. beforeExecute() returned undefined,","}"]}},{"number":200,"comment":"nellie » mos6502 » operations » LDX » beforeEach hook for run() ZERO_PAGE mode should return this","name":"nellie » mos6502 » operations » LDX » run() ZERO_PAGE mode should return this","ok":false,"extra":{"name":["AssertionError"],"message":["Halting LDX 0xa6. beforeExecute() returned undefined,","}",""]}}]}
